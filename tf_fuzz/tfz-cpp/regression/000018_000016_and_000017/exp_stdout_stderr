Trusted Firmware Fuzzer (TF-Fuzz) starting...

Info:  random seed was not specified.

Using seed value of \d+ \(0x[a-f\d]+\).
Purpose line:  to both read the value of a single asset multiple times and assign a sequence of values to a single asset
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "data"
LITERAL string:  "First value"
Create from literal data:  ""First value""
SST no storage flag:  none"
SST creation flag
;"
SST creation flags
;"
Set SST command:  ";"
Appended to end of call sequence:  SST-set call.
Set command:  ";"
Command with no expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "check"
LITERAL string:  "Not this"
Read check against literal:  "Not this"
SST-read arguments:  expect"
Read SST command:  "expect"
Appended to end of call sequence:  SST-get call.
Read command:  "expect"
Expect fail clause:  "fail"
Command with expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "data"
LITERAL string:  "Second value"
Create from literal data:  ""Second value""
Set SST command:  ";"
Appended to end of call sequence:  SST-set call.
Set command:  ";"
Command with no expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "check"
LITERAL string:  "Not this either"
Read check against literal:  "Not this either"
SST-read arguments:  expect"
Read SST command:  "expect"
Appended to end of call sequence:  SST-get call.
Read command:  "expect"
Expect fail clause:  "fail"
Command with expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "data"
Create from random data
Set SST command:  ";"
Appended to end of call sequence:  SST-set call.
Set command:  ";"
Command with no expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "data"
LITERAL string:  "Fourth value"
Create from literal data:  ""Fourth value""
Set SST command:  ";"
Appended to end of call sequence:  SST-set call.
Set command:  ";"
Command with no expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "check"
LITERAL string:  "No dice on this either"
Read check against literal:  "No dice on this either"
SST-read arguments:  expect"
Read SST command:  "expect"
Appended to end of call sequence:  SST-get call.
Read command:  "expect"
Expect fail clause:  "fail"
Command with expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "data"
Create from random data
Set SST command:  ";"
Appended to end of call sequence:  SST-set call.
Set command:  ";"
Command with no expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "data"
Create from random data
Set SST command:  ";"
Appended to end of call sequence:  SST-set call.
Set command:  ";"
Command with no expect:  ";"
ASSET_IDENTIFIER:  "indecisive"
Asset identifier list:  "print"
Read log to test log:  "print"
SST-read arguments:  ;"
Read SST command:  ";"
Appended to end of call sequence:  SST-get call.
Read command:  ";"
Command with no expect:  ";"
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Lines:  Line number 12.
Call sequence generated.
Simulating call sequence...
Call sequence:
    SST-set call for asset indecisive
    SST-get call for asset indecisive
    SST-set call for asset indecisive
    SST-get call for asset indecisive
    SST-set call for asset indecisive
    SST-set call for asset indecisive
    SST-get call for asset indecisive
    SST-set call for asset indecisive
    SST-set call for asset indecisive
    SST-get call for asset indecisive
Writing test file, ./test.c.

TF-Fuzz test generation complete.
