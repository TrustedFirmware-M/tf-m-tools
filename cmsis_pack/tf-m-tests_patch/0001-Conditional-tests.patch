From: Robert Rostohar <Robert.Rostohar@arm.com>
Date: Mon, 21 Dec 2020 15:38:38 +0100
Subject: [PATCH] Update conditional tests selection

Modify preprocessor defines for conditional inclusion of enabled tests.

This allows finer granularity user selection of tests for individual
services/components to be executed.

Example: Protected Storage requires also Internal Trusted Storage and Crypto.
This implies that tests for all those services would be automatically enabled.
Having another level of user selection of tests to execute is convenient,
especially when focusing/debugging only on a single service.
---
 test/framework/non_secure_suites.c | 48 +++++++++++++++++-------------
 test/framework/secure_suites.c     | 28 ++++++++---------
 2 files changed, 42 insertions(+), 34 deletions(-)

diff --git a/test/framework/non_secure_suites.c b/test/framework/non_secure_suites.c
index 5a2eea7..6f26c14 100644
--- a/test/framework/non_secure_suites.c
+++ b/test/framework/non_secure_suites.c
@@ -10,30 +10,34 @@
 #include "test_framework.h"
 
 /* Service specific includes */
-#ifdef TFM_PARTITION_PROTECTED_STORAGE
+#ifdef ENABLE_PROTECTED_STORAGE_SERVICE_TESTS
 #include "ps_ns_tests.h"
 #endif
-#ifdef TFM_PARTITION_INTERNAL_TRUSTED_STORAGE
+#ifdef ENABLE_INTERNAL_TRUSTED_STORAGE_SERVICE_TESTS
 #include "its_ns_tests.h"
 #endif
-#ifdef TFM_PARTITION_CRYPTO
+#ifdef ENABLE_CRYPTO_SERVICE_TESTS
 #include "crypto_ns_tests.h"
 #endif
-#ifdef TFM_PARTITION_INITIAL_ATTESTATION
+#ifdef ENABLE_ATTESTATION_SERVICE_TESTS
 #include "attest_ns_tests.h"
+#endif
+#ifdef ENABLE_QCBOR_TESTS
 #include "qcbor_ns_tests.h"
-#ifndef SYMMETRIC_INITIAL_ATTESTATION
+#endif
+#ifdef ENABLE_T_COSE_TESTS
 #include "t_cose_ns_tests.h"
-#endif /* !SYMMETRIC_INITIAL_ATTESTATION */
 #endif
-#ifdef TFM_PARTITION_PLATFORM
+#ifdef ENABLE_PLATFORM_SERVICE_TESTS
 #include "platform_ns_tests.h"
 #endif
+#if defined(CORE_TEST_POSITIVE) || defined (CORE_TEST_INTERACTIVE)
 #include "core_ns_tests.h"
-#ifdef TFM_PSA_API
+#endif
+#ifdef ENABLE_IPC_TEST
 #include "ipc_ns_tests.h"
 #else
-#ifdef TFM_PARTITION_AUDIT_LOG
+#ifdef ENABLE_AUDIT_LOGGING_SERVICE_TESTS
 #include "audit_ns_tests.h"
 #endif
 #endif /* TFM_PSA_API */
@@ -44,52 +48,56 @@
 static struct test_suite_t test_suites[] = {
     /* List test cases which are compliant with level 1 isolation */
 
-#ifdef TFM_PARTITION_PROTECTED_STORAGE
+#ifdef ENABLE_PROTECTED_STORAGE_SERVICE_TESTS
     {&register_testsuite_ns_psa_ps_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_INTERNAL_TRUSTED_STORAGE
+#ifdef ENABLE_INTERNAL_TRUSTED_STORAGE_SERVICE_TESTS
     /* Non-secure ITS test cases */
     {&register_testsuite_ns_psa_its_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_CRYPTO
+#ifdef ENABLE_CRYPTO_SERVICE_TESTS
     /* Non-secure Crypto test cases */
     {&register_testsuite_ns_crypto_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_PLATFORM
+#ifdef ENABLE_PLATFORM_SERVICE_TESTS
     /* Non-secure platform service test cases */
     {&register_testsuite_ns_platform_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_INITIAL_ATTESTATION
+#ifdef ENABLE_ATTESTATION_SERVICE_TESTS
     /* Non-secure initial attestation service test cases */
     {&register_testsuite_ns_attestation_interface, 0, 0, 0},
+#endif
 
+#ifdef ENABLE_QCBOR_TESTS
     /* Non-secure QCBOR library test cases */
     {&register_testsuite_ns_qcbor, 0, 0, 0},
+#endif
 
-#ifndef SYMMETRIC_INITIAL_ATTESTATION
+#ifdef ENABLE_T_COSE_TESTS
     /* Non-secure T_COSE library test cases */
     {&register_testsuite_ns_t_cose, 0, 0, 0},
-#endif /* !SYMMETRIC_INITIAL_ATTESTATION */
 #endif
 
-#ifdef TFM_PARTITION_AUDIT_LOG
+#ifdef ENABLE_AUDIT_LOGGING_SERVICE_TESTS
     /* Non-secure Audit Logging test cases */
     {&register_testsuite_ns_audit_interface, 0, 0, 0},
 #endif
 
-/* Non-secure core test cases */
-{&register_testsuite_ns_core_positive, 0, 0, 0},
+#ifdef CORE_TEST_POSITIVE
+    /* Non-secure core test cases */
+    {&register_testsuite_ns_core_positive, 0, 0, 0},
+#endif
 
 #ifdef CORE_TEST_INTERACTIVE
     /* Non-secure interactive test cases */
     {&register_testsuite_ns_core_interactive, 0, 0, 0},
 #endif
 
-#ifdef TFM_PSA_API
+#ifdef ENABLE_IPC_TEST
     /* Non-secure IPC test cases */
     {&register_testsuite_ns_ipc_interface, 0, 0, 0},
 #endif
diff --git a/test/framework/secure_suites.c b/test/framework/secure_suites.c
index a572e05..1ac20c3 100644
--- a/test/framework/secure_suites.c
+++ b/test/framework/secure_suites.c
@@ -10,32 +10,32 @@
 #include "test_framework.h"
 
 /* Service specific includes */
-#ifdef TFM_PARTITION_PROTECTED_STORAGE
+#ifdef ENABLE_PROTECTED_STORAGE_SERVICE_TESTS
 #include "ps_tests.h"
 #endif
-#ifdef TFM_PARTITION_INTERNAL_TRUSTED_STORAGE
+#ifdef ENABLE_INTERNAL_TRUSTED_STORAGE_SERVICE_TESTS
 #include "its_s_tests.h"
 #endif
-#ifdef TFM_PARTITION_INITIAL_ATTESTATION
+#ifdef ENABLE_ATTESTATION_SERVICE_TESTS
 #include "attest_s_tests.h"
 #endif
-#ifdef TFM_PARTITION_CRYPTO
+#ifdef ENABLE_CRYPTO_SERVICE_TESTS
 #include "crypto_s_tests.h"
 #endif
-#ifdef TFM_PARTITION_PLATFORM
+#ifdef ENABLE_PLATFORM_SERVICE_TESTS
 #include "platform_s_tests.h"
 #endif
-#ifdef TFM_PSA_API
+#ifdef ENABLE_IPC_TEST
 #include "ipc_s_tests.h"
 #else
-#ifdef TFM_PARTITION_AUDIT_LOG
+#ifdef ENABLE_AUDIT_LOGGING_SERVICE_TESTS
 #include "audit_s_tests.h"
 #endif
 #endif /* TFM_PSA_API */
 
 static struct test_suite_t test_suites[] = {
 
-#ifdef TFM_PARTITION_PROTECTED_STORAGE
+#ifdef ENABLE_PROTECTED_STORAGE_SERVICE_TESTS
     {&register_testsuite_s_psa_ps_interface, 0, 0, 0},
     {&register_testsuite_s_psa_ps_reliability, 0, 0, 0},
 
@@ -44,33 +44,33 @@ static struct test_suite_t test_suites[] = {
 #endif
 #endif
 
-#ifdef TFM_PARTITION_INTERNAL_TRUSTED_STORAGE
+#ifdef ENABLE_INTERNAL_TRUSTED_STORAGE_SERVICE_TESTS
     /* Secure ITS test cases */
     {&register_testsuite_s_psa_its_interface, 0, 0, 0},
     {&register_testsuite_s_psa_its_reliability, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_CRYPTO
+#ifdef ENABLE_CRYPTO_SERVICE_TESTS
     /* Crypto test cases */
     {&register_testsuite_s_crypto_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_INITIAL_ATTESTATION
+#ifdef ENABLE_ATTESTATION_SERVICE_TESTS
     /* Secure initial attestation service test cases */
     {&register_testsuite_s_attestation_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_PLATFORM
+#ifdef ENABLE_PLATFORM_SERVICE_TESTS
     /* Secure platform service test cases */
     {&register_testsuite_s_platform_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PARTITION_AUDIT_LOG
+#ifdef ENABLE_AUDIT_LOGGING_SERVICE_TESTS
     /* Secure Audit Logging test cases */
     {&register_testsuite_s_audit_interface, 0, 0, 0},
 #endif
 
-#ifdef TFM_PSA_API
+#ifdef ENABLE_IPC_TEST
     /* Secure IPC test cases */
     {&register_testsuite_s_ipc_interface, 0, 0, 0},
 #endif
-- 
